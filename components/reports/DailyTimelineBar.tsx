'use client';

import React from 'react';

type Seg = {
  start: string;
  end: string;
  machineId?: string | number | null;
  machineName?: string | null;
  autoGenerated?: boolean | null;
  workDescription?: string | null;
};

function toMs(value: string) {
  const time = new Date(value).getTime();
  return Number.isFinite(time) ? time : Number.NaN;
}

export default function DailyTimelineBar({
  earliestStart,
  latestEnd,
  sessions,
}: {
  earliestStart: string;
  latestEnd: string;
  sessions: Seg[];
}) {
  const startMs = toMs(earliestStart);
  const endMs = toMs(latestEnd);
  const span = endMs - startMs;

  if (!(Number.isFinite(startMs) && Number.isFinite(endMs)) || span <= 0) {
    return null;
  }

  const hours: number[] = [];
  const HOUR = 60 * 60 * 1000;
  const firstHour = Math.ceil(startMs / HOUR) * HOUR;
  for (let t = firstHour; t < endMs; t += HOUR) {
    hours.push(t);
  }

  return (
    <div className="print:hidden relative h-4 w-full overflow-hidden rounded bg-neutral-100 dark:bg-neutral-800">
      <div className="absolute left-0 right-0 top-1/2 h-px -translate-y-1/2 bg-neutral-400/60" />
      {hours.map((t) => {
        const left = ((t - startMs) / span) * 100;
        return (
          <div
            key={t}
            className="absolute bottom-0 top-0 w-px bg-neutral-300/80 dark:bg-neutral-600/80"
            style={{ left: `${left}%` }}
          />
        );
      })}
      {sessions.map((session, index) => {
        const start = toMs(session.start);
        const end = toMs(session.end);
        if (!(Number.isFinite(start) && Number.isFinite(end)) || end <= start) {
          return null;
        }
        const left = ((start - startMs) / span) * 100;
        const width = ((end - start) / span) * 100;
        const title = `${session.start} – ${session.end}${
          session.machineId
            ? ` / ${session.machineId}${session.machineName ? `（${session.machineName}）` : ''}`
            : ''
        }${session.workDescription ? ` / ${session.workDescription}` : ''}${session.autoGenerated ? ' / AUTO OUT' : ''}`;
        return (
          <div
            key={index}
            className="absolute top-1/2 h-1.5 -translate-y-1/2 rounded-full bg-indigo-500 dark:bg-indigo-400"
            style={{ left: `${left}%`, width: `${width}%` }}
            title={title}
          />
        );
      })}
    </div>
  );
}
